# Sandwich Mount Keyboard Example
# Through-holes in plate aligned with case mounting
# Based on ergogen_design_prompt.md guidelines

meta:
  name: sandwich_mount_macropad
  description: 4x2 macropad with sandwich mount system
  author: Ergogen Design Prompt
  version: 1.0

units:
  # Key spacing
  kx: 19.05  # MX key spacing
  ky: 19.05  # MX key spacing
  
  # Mounting specifications
  mount_screw_radius: 1.1   # M2 screw clearance
  mount_hole_radius: 2.5    # Larger clearance for through-holes
  plate_thickness: 1.5      # Plate thickness
  standoff_height: 8        # Distance between case halves
  
  # Case specifications
  wall_thickness: 3
  case_height: 4            # Each half is thinner
  board_fillet: 2

points:
  zones:
    matrix:
      key:
        padding: ky
        spread: kx
        tags: [key]
      columns:
        col0:
          key:
            column_net: C0
        col1:
          key:
            column_net: C1
        col2:
          key:
            column_net: C2
        col3:
          key:
            column_net: C3
      rows:
        row0:
          row_net: R0
        row1:
          row_net: R1
    
    # Sandwich mounting holes - symmetric pattern
    sandwich_mounts:
      anchor:
        ref: matrix_col1_row0
        shift: [0, 0]
      key:
        tags: [sandwich_mount]
      columns:
        mount_tl:  # Top left
          key:
            name: mount_tl
          shift: [-40, 20]
        mount_tr:  # Top right
          key:
            name: mount_tr
          shift: [40, 20]
        mount_bl:  # Bottom left
          key:
            name: mount_bl
          shift: [-40, -35]
        mount_br:  # Bottom right
          key:
            name: mount_br
          shift: [40, -35]
        mount_center: # Center support
          key:
            name: mount_center
          shift: [0, -7.5]

outlines:
  # Basic board outline (for PCB)
  board:
    - what: polygon
      operation: stack
      fillet: board_fillet
      points:
        - ref: matrix_col0_row0
          shift: [-10, -10]
        - ref: matrix_col3_row0
          shift: [10, -10]
        - ref: matrix_col3_row1
          shift: [10, 10]
        - ref: matrix_col0_row1
          shift: [-10, 10]

  # Case outline (larger for mounting hardware)
  case_outline:
    - what: polygon
      operation: stack
      fillet: board_fillet
      points:
        - ref: matrix_col0_row0
          shift: [-45, -40]
        - ref: matrix_col3_row0
          shift: [45, -40]
        - ref: matrix_col3_row1
          shift: [45, 25]
        - ref: matrix_col0_row1
          shift: [-45, 25]

  # Case walls
  case_walls:
    - what: outline
      name: case_outline
      expand: wall_thickness

  # Plate outline (matches case for through-holes)
  plate_outline:
    - what: outline
      name: case_outline

  # Switch cutouts
  switch_cutouts:
    - what: rectangle
      where: [key]
      size: 14  # MX switch cutout
      bound: false

  # Sandwich mounting holes in plate (through-holes)
  plate_mount_holes:
    - what: circle
      where: [sandwich_mount]
      radius: mount_hole_radius  # Large clearance
      bound: false

  # Case mounting holes (precise fit)
  case_mount_holes:
    - what: circle
      where: [sandwich_mount]
      radius: mount_screw_radius
      bound: false

  # Standoff posts for case separation
  standoff_posts:
    - what: circle
      where: [sandwich_mount]
      radius: 3  # Larger posts for structural support
      bound: false

pcbs:
  main:
    outlines:
      main:
        outline: board
      switches:
        outline: switch_cutouts
        layer: Edge.Cuts
    footprints:
      # Switches with diodes
      switches:
        what: mx
        where: [key]
        params:
          from: "{{column_net}}"
          to: "{{colrow}}"
        
      diodes:
        what: diode
        where: [key]
        params:
          from: "{{colrow}}"
          to: "{{row_net}}"
        adjust:
          shift: [0, -5]

      # Controller (ProMicro)
      controller:
        what: promicro
        where:
          ref: matrix_col1_row0
          shift: [0, -25]
          rotate: 270
        params:
          orientation: down

cases:
  # Plate with through-holes
  plate:
    - name: plate_outline
      extrude: plate_thickness
    - name: switch_cutouts
      extrude: plate_thickness + 1
      operation: subtract
    - name: plate_mount_holes
      extrude: plate_thickness + 1
      operation: subtract

  # Top case components
  _top_outer:
    - name: case_walls
      extrude: case_height

  _top_inner:
    - name: case_outline
      extrude: case_height

  _top_standoff_holes:
    - name: case_mount_holes
      extrude: case_height + 1

  # Top case half
  case_top:
    - what: case
      name: _top_outer
      operation: add
    - what: case
      name: _top_inner
      operation: subtract
    - what: case
      name: _top_standoff_holes
      operation: subtract

  # Bottom case components
  _bottom_outer:
    - name: case_walls
      extrude: case_height

  _bottom_inner:
    - name: case_outline
      extrude: case_height

  _bottom_standoff_posts:
    - name: standoff_posts
      extrude: standoff_height

  _bottom_standoff_holes:
    - name: case_mount_holes
      extrude: standoff_height + 1

  # Bottom case half with standoffs
  case_bottom:
    - what: case
      name: _bottom_outer
      operation: add
    - what: case
      name: _bottom_inner
      operation: subtract
    - what: case
      name: _bottom_standoff_posts
      operation: add
    - what: case
      name: _bottom_standoff_holes
      operation: subtract

  # Standoffs (separate parts for assembly clarity)
  standoffs:
    - name: standoff_posts
      extrude: standoff_height
    - name: case_mount_holes
      extrude: standoff_height + 1
      operation: subtract

  # Assembly view (sandwich construction)
  assembly:
    - what: case
      name: case_bottom
      operation: add
    - what: case
      name: standoffs
      operation: add
      shift: [0, 0, case_height]
    - what: case
      name: plate
      operation: add
      shift: [0, 0, case_height + standoff_height/2]
    - what: case
      name: case_top
      operation: add
      shift: [0, 0, case_height + standoff_height]
