# Forest Keyboard v1.2 - Mathematical Column Height Equalization
# Exploring mathematical approaches to uniform column heights for auto-generation
# 
# MATHEMATICAL DESIGN PHILOSOPHY:
# - Define target height variables for consistent alignment
# - Calculate staggers using mathematical formulas
# - Enable programmatic regeneration with different parameters

units:
  X: 0.9                    # Extrusion width - controls binding thickness
  B: 3*X                    # Binding distance (2.7mm) - creates connected plate areas
  
  # COLUMN HEIGHT MATHEMATICS VARIABLES
  # Basic spacing and sizing
  RowSpacing: 1U            # Standard row spacing (19mm)
  KeySpacing: 1U + 4        # Column spread (23mm)
  
  # HEIGHT EQUALIZATION VARIABLES - Method 1: Target Boundaries
  TopBoundary: 2U           # Target top boundary for all columns
  BottomBoundary: -2U       # Target bottom boundary for all columns
  TargetHeight: TopBoundary - BottomBoundary  # Total target height (4U = 76mm)
  
  # METHOD 2: Reference Column Heights
  # Calculate natural heights (rows * spacing)
  NaturalHeight_4Row: 3 * RowSpacing     # 4-row columns: 3U spacing between keys
  NaturalHeight_3Row: 2 * RowSpacing     # 3-row columns: 2U spacing between keys
  
  # METHOD 3: Ergonomic Curve Parameters
  CurveAmplitude: 0.5U      # Maximum deviation from center line
  CurvePhase: 1.2           # Phase shift for ergonomic curve
  
  # STAGGER CALCULATION FORMULAS
  # Method 1A: Top Alignment - All columns start at same Y
  TopAlign_4Row: TopBoundary - (NaturalHeight_4Row / 2)
  TopAlign_3Row: TopBoundary - (NaturalHeight_3Row / 2)
  
  # Method 1B: Bottom Alignment - All columns end at same Y  
  BottomAlign_4Row: BottomBoundary + (NaturalHeight_4Row / 2)
  BottomAlign_3Row: BottomBoundary + (NaturalHeight_3Row / 2)
  
  # Method 1C: Center Alignment - All columns centered on same line
  CenterAlign: 0U           # Center line for all columns

points:
  key:
    bind: [B, B, B, B]
    tags.1U: true
  zones:
    fingers:
      anchor:
        shift: [100, -100]
      columns:
        # COLUMN 1: Reference column (no stagger for comparison)
        col_one:
          key:
            # stagger: 0                    # Original: no stagger
            # stagger: TopAlign_4Row        # Method 1A: Top alignment
            # stagger: BottomAlign_4Row     # Method 1B: Bottom alignment  
            stagger: CenterAlign          # Method 1C: Center alignment
          rows:
            thumb:
              skip: true
            row_0:
              skip: true
            row_1:
              bind: [B, B, 4.4*B, B]
            row_2:
            row_3:
              bind: [4.5*B+12, B, B, B]
        
        # COLUMN 2: Mathematical stagger calculation
        col_two:
          key:
            # Mathematical approaches:
            # stagger: TopAlign_4Row        # Method 1A: Same top as col_one
            # stagger: BottomAlign_4Row + 0.5*RowSpacing    # Method 1B: Slightly higher bottom
            stagger: CenterAlign + CurveAmplitude * sin(1 * CurvePhase)  # Method 3: Ergonomic curve
            spread: KeySpacing - 3
          rows:
            thumb:
              skip: true
            row_0:
            row_1:
            row_2:
            row_3:
              bind: [4.5*B+3, B, B, B]
        
        # COLUMN 3: Tallest column - defines maximum height
        col_three:
          key:
            # This column has maximum natural height, so it defines our target
            # stagger: TopAlign_4Row        # Method 1A: Top alignment
            # stagger: BottomAlign_4Row     # Method 1B: Bottom alignment
            stagger: CenterAlign + CurveAmplitude * sin(2 * CurvePhase)  # Method 3: Peak of curve
            spread: KeySpacing
          rows:
            thumb:
              skip: true
            row_0:
            row_1:
            row_2:
            row_3:
              bind: [4.4*B, B, B, B]
        
        # COLUMN 4: Medium height adjustment
        col_four:
          key:
            # Calculate stagger to match tallest column
            # stagger: TopAlign_4Row        # Method 1A: Same top boundary
            # stagger: BottomAlign_4Row     # Method 1B: Same bottom boundary
            stagger: CenterAlign + CurveAmplitude * sin(3 * CurvePhase)  # Method 3: Curve continuation
            spread: KeySpacing
          rows:
            thumb:
              skip: true
            row_0:
            row_1:
            row_2:
            row_3:
        
        # COLUMN 5: Reduced height column (3 rows)
        col_five:
          key:
            # Adjust for shorter column to match others
            # stagger: TopAlign_3Row        # Method 1A: Top align (shorter column)
            # stagger: BottomAlign_3Row     # Method 1B: Bottom align (shorter column)  
            stagger: CenterAlign + CurveAmplitude * sin(4 * CurvePhase)  # Method 3: Curve descent
            spread: KeySpacing
          rows:
            thumb:
              skip: true
            row_0:
              skip: true   # This column has one less row
            row_1:
            row_2:
            row_3:
        
        # COLUMN 6: Edge column with MCU integration
        col_six:
          key:
            # Edge column alignment
            # stagger: TopAlign_3Row        # Method 1A: Top alignment
            # stagger: BottomAlign_3Row     # Method 1B: Bottom alignment
            stagger: CenterAlign + CurveAmplitude * sin(5 * CurvePhase)  # Method 3: Curve end
            spread: KeySpacing
            # MCU binding calculation
            bind: [null, B+3+21+0.5+3*X, null, null]
          rows:
            thumb:
              skip: true
            row_0:
              skip: true   # Shorter column
            row_1:
            row_2:
            row_3:
      
      rows:
        thumb:
        row_0:
        row_1:
        row_2:
        row_3:
    
    thumbfan:
      anchor:
        ref: fingers_col_six_row_0
        shift: [-1U - 2, -1.2U]
      columns:
        near:
          key:
            splay: -11.9
            origin: [0.05U, -0.25U]
            bind: [B + 5, B, B + 2, B + 80]
          rows:
            thumb:
              shift: [0, 0U]
              spread: KeySpacing
        home:
          key:
            splay: -11.9
            origin: [0.1U, -0.5U]
            bind: [B + 18, B + 10.98, B + 7, B + 20]
          rows:
            thumb:
              shift: [2, 0U]
              spread: KeySpacing
        far:
          key:
            splay: -11.9
            bind: [B+10, B + 3, B + 7, B]
          rows:
            thumb:
              shift: [4, 0U]
              spread: KeySpacing 
      rows:
        thumb:

# MATHEMATICAL ANALYSIS SECTION
# Document the different approaches for auto-generation

# METHOD 1: BOUNDARY ALIGNMENT
# Define target top and bottom boundaries, calculate staggers to align all columns
# Formula: stagger = target_boundary - (natural_position)
# 
# 1A: Top Alignment
# - All columns start at TopBoundary
# - stagger = TopBoundary - (natural_height/2)
#
# 1B: Bottom Alignment  
# - All columns end at BottomBoundary
# - stagger = BottomBoundary + (natural_height/2)
#
# 1C: Center Alignment
# - All columns centered on CenterAlign line
# - stagger = CenterAlign (same for all, assuming equal heights)

# METHOD 2: REFERENCE COLUMN SCALING
# Use one column as reference, scale others to match
# Formula: stagger_n = reference_stagger + (target_height - natural_height_n) / 2

# METHOD 3: ERGONOMIC CURVE FITTING
# Use mathematical curves (sine, cosine, polynomial) for natural finger positioning
# Formula: stagger = base_stagger + amplitude * curve_function(column_index)
# Benefits: More ergonomic, can be easily parameterized

# METHOD 4: PARAMETRIC HEIGHT MATCHING (Most Advanced)
# Calculate required parameters to achieve exact height matching
# Variables:
#   - MAX_COL_HEIGHT = max(all natural column heights)  
#   - stagger_col_n = (MAX_COL_HEIGHT - natural_height_col_n) / 2
# This ensures all columns have identical Y-span

outlines:
  # VISUALIZATION FOR TESTING MATHEMATICAL APPROACHES
  _switch_holes:
    - what: rectangle
      where: true
      size: 14
      bound: false
  
  _keys:
    - what: rectangle
      where: true
      size: 18
      bound: false
  
  # HEIGHT ANALYSIS GUIDES
  _height_guides:
    # Top boundary line
    top_guide:
      what: rectangle
      adjust:
        ref: fingers_col_one_row_3
        shift: [0, TopBoundary]
      size: [200, 1]          # Long line across all columns
    
    # Bottom boundary line  
    bottom_guide:
      what: rectangle
      adjust:
        ref: fingers_col_one_row_1
        shift: [0, BottomBoundary]
      size: [200, 1]          # Long line across all columns
    
    # Center alignment line
    center_guide:
      what: rectangle
      adjust:
        ref: fingers_col_one_row_2
        shift: [0, CenterAlign]
      size: [200, 1]          # Long line across all columns
  
  plate:
    - what: rectangle
      where: true
      bound: true
      size: 1U
      corner: .5
  
  # BOARD OUTLINE - Overall perimeter of the keyboard
  board_outline:
    - what: polygon
      operation: outline
      points:
        - ref: fingers_col_one_row_3
          shift: [-0.5U, 0.5U]
        - ref: fingers_col_six_row_3  
          shift: [0.5U, 0.5U]
        - ref: thumbfan_far_thumb
          shift: [0.5U, 0.5U]
        - ref: thumbfan_near_thumb
          shift: [-0.5U, 0.5U]
        - ref: fingers_col_one_row_1
          shift: [-0.5U, -0.5U]
      fillet: 3
  
  # MATHEMATICAL ANALYSIS PREVIEW
  mathematical_preview:
    - what: outline
      name: plate            # Base plate
    - what: outline
      name: _keys            # Key positions
      operation: stack
    - what: outline
      name: _height_guides   # Mathematical guide lines
      operation: stack
    - what: outline
      name: _switch_holes    # Switch cutouts for reference
      operation: stack
    - what: outline
      name: board_outline    # Board perimeter
      operation: stack

cases:
  analysis:
    - name: mathematical_preview
      extrude: 2
